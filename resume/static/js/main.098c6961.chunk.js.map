{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ArchIcon","xmlns","width","viewBox","version","height","className","id","y1","x2","x1","y2","stop-color","stop-opacity","offset","d","fill","fill-opacity","App","Container","Grid","columns","Column","Card","centered","Image","src","wrapped","Content","Header","Meta","Description","List","Item","Icon","name","color","href","extra","Menu","icon","widths","secondary","size","class","divided","relaxed","verticalAlign","Label","ribbon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.098c6961.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {\n  Menu,\n  Link,\n  Grid,\n  Card,\n  List,\n  Feed,\n  Label,\n  Image,\n  Icon,\n  Container,\n  Segment,\n  Header\n} from \"semantic-ui-react\";\nfunction ArchIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"12px\"\n      viewBox=\"0 0 65 65\"\n      version=\"1.1\"\n      height=\"12px\"\n      className=\"arch-icon\"\n    >\n      <defs>\n        <linearGradient\n          id=\"lg\"\n          y1=\"26.924%\"\n          x2=\"28.129%\"\n          x1=\"54.638%\"\n          y2=\"79.519%\"\n        >\n          <stop stop-color=\"#fff\" stop-opacity=\"0\" offset=\"0\" />\n          <stop stop-color=\"#fff\" stop-opacity=\".27451\" offset=\"1\" />\n        </linearGradient>\n      </defs>\n      <path\n        d=\"m32.253 0.20991c-2.849 6.9843-4.579 11.559-7.75 18.336 1.944 2.061 4.334 4.453 8.211 7.164-4.168-1.715-7.009-3.432-9.133-5.219-4.059 8.47-10.423 20.531-23.328 43.719 10.14-5.854 18.002-9.466 25.328-10.844-0.314-1.351-0.481-2.819-0.469-4.344l0.008-0.32c0.161-6.498 3.542-11.495 7.547-11.156 4.004 0.339 7.122 5.884 6.961 12.383-0.031 1.224-0.173 2.4-0.414 3.492 7.247 1.418 15.034 5.013 25.039 10.789-1.973-3.632-3.74-6.905-5.422-10.024-2.649-2.053-5.411-4.724-11.047-7.617 3.874 1.007 6.65 2.171 8.812 3.469-17.098-31.835-18.48-36.068-24.343-49.828v-0.00009z\"\n        fill=\"#fff\"\n      />\n      <path\n        id=\"path2522\"\n        fill-opacity=\".16568\"\n        fill=\"#fff\"\n        d=\"m50.266 38.249c-13.872-18.827-17.087-34.002-17.902-37.625 7.4 17.067 7.349 17.277 17.902 37.625z\"\n      />\n      <path\n        d=\"m32.378 0.45992c-0.36 0.88448-0.7 1.7468-1.032 2.5625-0.364 0.8946-0.718 1.7565-1.062 2.5938s-0.693 1.6309-1.031 2.4375c-0.339 0.8065-0.654 1.6039-1 2.4063-0.346 0.802-0.726 1.613-1.094 2.437-0.368 0.825-0.752 1.658-1.156 2.532-0.404 0.873-0.828 1.801-1.282 2.75-0.061 0.128-0.124 0.276-0.187 0.406 1.939 2.054 4.33 4.427 8.187 7.125-4.167-1.715-7-3.432-9.125-5.219-0.11 0.226-0.198 0.425-0.312 0.656-0.42 0.871-0.871 1.733-1.344 2.688-0.113 0.224-0.196 0.427-0.312 0.656-0.501 1.004-1.026 2.043-1.594 3.156-0.113 0.22-0.228 0.402-0.344 0.625-0.343 0.667-1.44 2.77-2.562 4.907-0.655 1.248-1.169 2.27-1.907 3.656-0.209 0.398-0.639 1.195-0.75 1.406 8.125-4.573 16.891-11.216 32.813-5.531-0.797-1.51-1.562-2.919-2.25-4.25-0.688-1.332-1.312-2.571-1.906-3.75s-1.143-2.291-1.657-3.344c-0.513-1.053-0.989-2.047-1.437-3s-0.885-1.87-1.281-2.75c-0.397-0.879-0.766-1.73-1.125-2.562-0.359-0.833-0.695-1.658-1.032-2.469-0.336-0.8115-0.672-1.5896-1-2.4063-0.142-0.3554-0.263-0.7338-0.406-1.0938-0.888-2.0849-1.759-4.1515-2.812-6.625v0.00002z\"\n        fill=\"url(#lg)\"\n      />\n    </svg>\n  );\n}\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Grid columns={2}>\n        <Grid.Column>\n          <Card className=\"personal\" centered>\n            <Image src=\"avator.png\" className=\"avator\" wrapped />\n            <Card.Content>\n              <Card.Header>Rapiz</Card.Header>\n              <Card.Meta>Software Engineering 1902 @ HUST</Card.Meta>\n              <Card.Description>\n                <List>\n                  <List.Item>\n                    <List.Icon name=\"code\" color=\"blue\">\n                      <sup>\n                        <a href=\"https://github.com/Rapiz1/acm-code\">#</a>\n                      </sup>\n                    </List.Icon>\n                    <List.Content>Algorithm Contest Participator</List.Content>\n                  </List.Item>\n                  <List.Item>\n                    <List.Icon name=\"heart\" color=\"red\" />\n                    <List.Content>Devoted Arch Linux User</List.Content>\n                  </List.Item>\n                  <List.Item>\n                    <List.Icon name=\"paint brush\" color=\"purple\" />\n                    <List.Content>\n                      <a href=\"https://github.com/Rapiz1/typography/\">Typography</a> Author\n                    </List.Content>\n                  </List.Item>\n                  <List.Item>\n                    <List.Icon name=\"music\" color=\"green\" />\n                    <List.Content>\n                      <a href=\"https://github.com/ilime/Petal\">Petal</a>{\" \"}\n                      Maintainer\n                    </List.Content>\n                  </List.Item>\n                </List>\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Menu icon widths={2} secondary>\n                <Menu.Item>\n                  <a href=\"https://rapiz.me\">\n                    <Icon name=\"write\" size=\"large\" />\n                  </a>\n                </Menu.Item>\n                <Menu.Item>\n                  <a href=\"https://github.com/rapiz1\">\n                    <i class=\"devicon-github-plain\"></i>\n                  </a>\n                </Menu.Item>\n              </Menu>\n            </Card.Content>\n          </Card>\n        </Grid.Column>\n        <Grid.Column>\n          <Header>Award</Header>\n          <List divided relaxed>\n            <List.Item>\n              <List.Icon\n                name=\"circle outline\"\n                size=\"big\"\n                color=\"grey\"\n                verticalAlign=\"middle\"\n              />\n              <List.Content>\n                <List.Header>APIO 2017 银牌</List.Header>\n                <List.Description>全国第 96 名</List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon\n                name=\"circle outline\"\n                size=\"big\"\n                color=\"brown\"\n                verticalAlign=\"middle\"\n              />\n              <List.Content>\n                <List.Header>NOI 2017 D 类铜牌</List.Header>\n                <List.Description>全国第 118 名 ( D 类单列 )</List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon\n                name=\"circle outline\"\n                size=\"big\"\n                color=\"yellow\"\n                verticalAlign=\"middle\"\n              />\n              <List.Content>\n                <List.Header>NOIP 2016 一等奖</List.Header>\n                <List.Description>河南省第 4 名</List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n          <Header>Skills</Header>\n          <List divided relaxed className='skills'>\n            <List.Item>\n              <Label ribbon color=\"yellow\">\n                <i class=\"devicon-devicon-plain\"></i>Algorithm\n              </Label>\n              熟练\n            </List.Item>\n            <List.Item>\n              <Label ribbon color=\"yellow\">\n                <ArchIcon />\n                Linux\n              </Label>\n              熟练，三年使用 Arch Linux\n            </List.Item>\n            <List.Item>\n              <Label ribbon color=\"yellow\">\n                <i class=\"devicon-cplusplus-plain\" />\n                C/C++\n              </Label>\n              熟练掌握（ 除 C++ 高级特性 ）\n            </List.Item>\n            <List.Item>\n              <Label ribbon>\n                <i class=\"devicon-atom-original\" />\n                Front-end\n              </Label>\n              熟悉 Javascript, HTML, CSS\n            </List.Item>\n            <List.Item>\n              <Label ribbon>\n                <i class=\"devicon-atom-original\" />\n                Front-end\n              </Label>\n              有 React, Semantic UI 使用经验\n            </List.Item>\n            <List.Item>\n              <Label ribbon color=\"brown\">\n                <i class=\"devicon-python-plain\" />\n                Python\n              </Label>\n              有 Python 脚本编写经验\n            </List.Item>\n          </List>\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}